% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ppm_predict.R
\name{predict.ppmFit}
\alias{predict.ppmFit}
\title{predict a ppmFit model}
\usage{
\method{predict}{ppmFit}(
  object,
  newdata = NULL,
  type = c("response", "link", "unit", "cloglog"),
  offset = NULL,
  slambda = c("lambda.min", "lambda.1se"),
  quad.only = TRUE,
  cores = 1,
  filename = NULL,
  bigtif = FALSE,
  ntiles = 10,
  ...
)
}
\arguments{
\item{object}{A fitted ppmFit object.}

\item{newdata}{SpatRaster. A terra raster stack of covariates for the model, or it can be a data.frame.}

\item{type}{Character. Either "response","link", "unit" & "cloglog". The type of response variable to return. The default is 'response' which is on the intensity scale or 'link' which is one the linear predictor scale (log).}

\item{offset}{Numeric vector or raster. If an offset is used in the model. Either an observed offset at prediction sites. If an offset is used and this is not known at prediction sites something like the mean offset used to fit the model can be used.}

\item{slambda}{Character Either 'lambda.min' or 'lambda.1se'. Value(s) of the penalty parameter lambda at which predictions are required. Default is "lambda.min".}

\item{quad.only}{Logical. If TRUE prediction is only done at the quadrature locations - useful for some of the diagnostic tools.}

\item{cores}{Integer. The number of cores to use in the prediction, useful for large rasters.}

\item{filename}{String Name of the raster file and path to save prediction. Default is NULL, otherwise it needs to be something like "pred.tif"}

\item{bigtif}{bool if true it will try and do prediction via tiling}

\item{ntiles}{integer The number of tiles in the x and y direction 10 = 10*10 tiling of raster}

\item{\\dots}{Additional parameter calls.}
}
\description{
This function should predict an intensity surface based on the
on the model fitting in the ppmFit.
}
\examples{
library(ppmData)
library(ppmFit)
library(terra)
path <- system.file("extdata", package = "ppmData")
lst <- list.files(path=path,pattern='*.tif',full.names = TRUE)
covariates <- rast(lst)
s <- sum(covariates)
covariates <- mask(covariates,s)
bias <- covariates[[1]]
names(bias) <- "bias"
covariates <- c(covariates,bias)
presences <- subset(snails,SpeciesID \%in\% "Tasmaphena sinclairi")

ppmdata <- ppmData(npoints = 10000,
                  presences=presences,
                  window = covariates[[1]],
                  covariates = covariates)

sp_form <- presence ~ poly(annual_mean_precip,2,raw=TRUE) +
                     poly(annual_mean_temp,2,raw=TRUE) +
                     poly(distance_from_main_roads,2,raw=TRUE)

## Fit a ppm using glmnet lasso
ft.ppm <- ppmFit(species_formula = sp_form, ppmdata=ppmdata)

## predict to the SpatRaster object
pred <- predict(ft.ppm, covariates, type='cloglog')

## predict to presence & quadrature sites
pred <- predict(ft.ppm)

## predict to just the quadrature sites
pred <- predict(ft.ppm, quad.only=TRUE)
}
